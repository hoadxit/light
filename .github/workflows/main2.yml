name: Auto minified JS, CSS and Deploy Preview
on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
jobs:
  deploy_preview:
    name: 'Deploy Preview'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Install shopify-cli
        run: 
          sudo gem install shopify-cli -v ${{ secrets.DP_SHOPIFY_CLI_VERSION }}
          
        #Secret environment variable that turns shopify CLI into CI mode that accepts environment credentials
      - name: Set env 
        run: |
          echo "CI=1" >> $GITHUB_ENV
          echo "SHOPIFY_SHOP=${{secrets.DP_SHOPIFY_STORE}}" >> $GITHUB_ENV
          echo "SHOPIFY_PASSWORD=${{secrets.DP_SHOPIFY_APP_PW}}" >> $GITHUB_ENV
          
      - name: Logged into store as staff 
        run: |
          shopify login [--store ${{env.SHOPIFY_SHOP}}]
      - name: Check theme PR
        continue-on-error: true
        id: check_theme
        run: |
          echo 'PR_THEME<<EOF' >> $GITHUB_ENV
          shopify theme pull -t PR#${{github.event.pull_request.number}} -x /  >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          
      - name: Log 01
        run: echo {{steps.check_theme.outcome}}
      - name: Create new theme unpublished
        id: create_theme
        if: steps.check_theme.outcome != 'success'
        continue-on-error: true
        timeout-minutes: 3
        run: |
          shopify theme push --unpublished --json -t PR#${{github.event.pull_request.number}}
          echo 'PR_THEME<<EOF' >> $GITHUB_ENV
          shopify theme pull -t PR#${{github.event.pull_request.number}} -x /  >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Log 02
        run: echo {{steps.create_theme.outcome}}
      - name: Get PR_THEME_ID
        if: steps.check_theme.outcome == 'success' || steps.create_theme.outcome == 'success'
        run: |
          export PR_THEME="${{env.PR_THEME}}"
          export A=$(awk -F'#' '{print $3}' <<< "$PR_THEME")
          export B=$(awk -F'\)' '{print $1}' <<< "$A")
          
          echo 'PR_THEME_ID<<EOF' >> $GITHUB_ENV
          echo $B >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      
      - name: Update theme 
        continue-on-error: true
        if: steps.check_theme.outcome == 'success'
        run: shopify theme push -t ${{env.PR_THEME_ID}}

      - name: Delete preview if merge PR
        if: github.event.action == 'closed'
        run: shopify theme delete ${{env.PR_THEME_ID}} -f
                    
      - name: Comment PR
        if: github.event.action != 'closed' && steps.create_theme.outcome != 'failure'
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            Deployed successfully to https://shen-yun-shop-dev.myshopify.com/?preview_theme_id=${{env.PR_THEME_ID}}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: false # This is the default

      - name: Comment PR
        if: github.event.action != 'closed' && steps.create_theme.outcome == 'failure'
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            Unable to create a new theme. The limit of 20 themes has been reached.
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: false # This is the default
