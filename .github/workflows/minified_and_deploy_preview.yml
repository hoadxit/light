name: Auto minified JS, CSS and Deploy Preview
on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
jobs:
  check_change:
    runs-on: ubuntu-latest
    outputs: 
      is_changed: ${{steps.changed-files.outputs.any_changed}}
      list_files: ${{steps.changed-files.outputs.all_modified_files}}
    steps:
      - uses: actions/checkout@v2 
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v11.9
        with:
          files: 
             assets/theme.js
             assets/theme.css
  minified:
      runs-on: ubuntu-latest
      needs: check_change
      if: github.event.action == 'opened' || needs.check_change.outputs.is_changed == 'true'
      steps:
      - uses: actions/checkout@v2 

      - name: Auto Minify JS
        if: github.event.action == 'opened' || contains(needs.check_change.outputs.list_files, 'theme.js')
        uses: nizarmah/auto-minify@v2.1
        with: 
          directory: "assets/theme.js"

      - name: Auto Minify Css
        if: github.event.action == 'opened' || contains(needs.check_change.outputs.list_files, 'theme.css')
        uses: nizarmah/auto-minify@v2.1
        with: 
          directory: "assets/theme.css"

      - name: Auto committing minified files
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Github Action: Auto Minified JS and CSS files"

  deploy_preview:
    runs-on: ubuntu-latest
    needs: minified
    if: ${{ always() }}
    name: 'Deploy Preview'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install shopify-cli
        run: 
          sudo gem install shopify-cli -v 2.10.0
          
        #Secret environment variable that turns shopify CLI into CI mode that accepts environment credentials
      - name: Set env 
        run: |
          echo "CI=1" >> $GITHUB_ENV
          echo "SHOPIFY_SHOP=${{secrets.DP_SHOPIFY_STORE}}" >> $GITHUB_ENV
          echo "SHOPIFY_PASSWORD=${{secrets.DP_SHOPIFY_APP_PW}}" >> $GITHUB_ENV
          
      - name: Logged into store as staff 
        run: |
          shopify login [--store ${{env.SHOPIFY_SHOP}}]
          
      - name: Create new theme unpublished
        if: github.event.action == 'opened' || github.event.action == 'reopened'
        run: |
          echo 'PR_THEME<<EOF' >> $GITHUB_ENV
          shopify theme push --unpublished --json -t PR#${{github.event.pull_request.number}}  >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          
      - name: Get PR_THEME_ID
        if: github.event.action == 'opened' || github.event.action == 'reopened'
        run: |
          export PRTHEME="${{env.PR_THEME}}"
          export A=$(awk -F'preview_theme_id=' '{print $2}' <<< "$PRTHEME")
          export B=$(awk -F'}' '{print $1}' <<< "$A")
          
          echo 'PR_THEME_ID<<EOF' >> $GITHUB_ENV
          echo $B >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          
      - name: Pull theme PR
        if: github.event.action == 'synchronize' || github.event.action == 'closed'
        run: |
<<<<<<< HEAD
          echo 'PR_THEME<<EOF' >> $GITHUB_ENV
          shopify theme pull -t PR#${{github.event.pull_request.number}} -x /  >> $GITHUB_ENV
=======
          echo 'PR_THERME<<EOF' >> $GITHUB_ENV
          shopify theme pull -t ${{github.event.pull_request.number}} -x /  >> $GITHUB_ENV
>>>>>>> b250d12fe948f9df482c0b2e6c1b721f1881b4f3
          echo 'EOF' >> $GITHUB_ENV
          
      - name: Get PR_THEME_ID
        if: github.event.action == 'synchronize' || github.event.action == 'closed'
        run: |
          export PRTHEME="${{env.PR_THEME}}"
          export A=$(awk -F'#' '{print $3}' <<< "$PRTHEME")
          export B=$(awk -F'\)' '{print $1}' <<< "$A")
          
          echo 'PR_THEME_ID<<EOF' >> $GITHUB_ENV
          echo $B >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      
      - name: Update theme 
        if: github.event.action == 'synchronize'
        run: shopify theme push -t ${{env.PR_THEME_ID}}  

      - name: Delete preview if merge PR
        if: github.event.action == 'closed'
        run: shopify theme delete ${{env.PR_THEME_ID}} -f
                    
      - name: Comment PR
        if: github.event.action != 'closed'
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            Deployed successfully to https://shen-yun-shop-dev.myshopify.com/?preview_theme_id=${{env.PR_THEME_ID}}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: false # This is the default